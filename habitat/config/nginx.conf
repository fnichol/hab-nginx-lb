user {{pkg.svc_user}} {{pkg.svc_group}};
worker_processes {{cfg.worker_processes}};
pid {{pkg.svc_var_path}}/pid;
daemon off;

events {
  worker_connections {{cfg.events.worker_connections}};
}

http {
  client_body_temp_path {{pkg.svc_var_path}}/nginx/client-body;
  fastcgi_temp_path {{pkg.svc_var_path}}/nginx/fastcgi;
  proxy_temp_path {{pkg.svc_var_path}}/nginx/proxy;
  scgi_temp_path {{pkg.svc_var_path}}/nginx/scgi_temp_path;
  uwsgi_temp_path {{pkg.svc_var_path}}/nginx/uwsgi;

  include        mime.types;
  default_type   application/octet-stream;

  sendfile       {{cfg.http.sendfile}};
  tcp_nopush     {{cfg.http.tcp_nopush}};
  tcp_nodelay    {{cfg.http.tcp_nodelay}};

  keepalive_timeout {{cfg.http.keepalive_timeout}};

  gzip on;
  gzip_vary on;
  gzip_min_length 10240;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
  gzip_disable "MSIE [1-6]\.";

  upstream app {
    {{cfg.http.balancing}};
  {{~#eachAlive bind.backend.members as |member|}}
    server {{member.sys.ip}}:{{member.cfg.port}};
  {{~/eachAlive}}
  }

  server {
    listen {{cfg.http.port}};
    {{~#if cfg.http.server_name}}
    server_name {{cfg.http.server_name}};
    {{~/if}}

    location / {
      proxy_set_header HOST $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://app;
    }
  }
}
